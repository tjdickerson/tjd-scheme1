{
    "name": "tjd-theme1",
    "author": "tjd",
    "variables":
    {

		"background": "#1b1c1b",
		"foreground": "#c9c9b0",
		"caret": "#a04040",
		"selection_background": "#b3cc57",
		"selection_foreground": "#000000",
		"keyword": "#e39f67",
		"string": "#88b06f",
		"number": "#80b0df",
		"operator": "#bdbdbd",
		"overloaded_operator": "#e9e9a0",
		"dot_comma_semicolon": "#bdbdbd",
		"braces_paren_bracket": "#bdbdbd",
		"comments": "#808080",
		"tag_meta": "#82a69c",
		"tag_value": "#7b8e68",
		"label": "#f0f0f0",
		"preprocessor_keyword": "#8e6b66",
		"inactive": "#787878",
		"const": "#d37272",
		"global_identifier": "#bdbdbd",
		"function_decl": "#e9e9a0",
		"function_call": "#e9e9a0",
		"parameter": "#bdbdbd",
		"namespace": "#ffe792",
		"interface": "#b792df",
		"enum_name": "#be8f8f",
		"struct_name": "#e6ad39",
		"method": "#e9e9a0",
		"instance_field": "#e6dfd4",
		"instance_property": "#e6dfd4",

        "white": "#c9c9b0",
		"white2": "#bcbcbc",
		"yellow": "#b3cc57",
		"yellow2": "#a3ac57",
		"black": "#000000",
		"red": "#a04040",
		"red2": "#200000",

    },
	"globals":
    {
        "foreground": "var(foreground)",
        "background": "var(background)",
        "caret": "color(var(caret) alpha(0.9))",
        "block_caret": "color(var(caret) alpha(0.2))",
        "block_caret_border": "color(var(red2) alpha(0.8))",
        "invisibles": "color(var(white) alpha(0.25))",
        "line_highlight": "var(selection_background)",
        "selection": "var(selection_background)",
        "selection_foreground": "var(black)",
        "selection_border": "var(selection_background)",
        "misspelling": "var(red)",
        "active_guide": "color(var(struct) alpha(0.69))",
        "find_highlight_foreground": "var(black)",
        "find_highlight": "var(yellow2)",
        "brackets_options": "underline",
        "brackets_foreground": "color(var(white2) alpha(0.65))",
        "bracket_contents_options": "underline",
        "bracket_contents_foreground": "color(var(white2) alpha(0.65))",
        "tags_options": "stippled_underline",
    },
    "rules":
    [
        {
            "name": "Comment",
            "scope": "comment",
            "foreground": "var(comments)"
        },
        {
            "name": "String",
            "scope": "string",
            "foreground": "var(string)"
        },
        {
            "name": "Number",
            "scope": "constant.numeric",
            "foreground": "var(number)"
        },
        {
            "name": "Number suffix",
            "scope": "storage.type.numeric",
            "foreground": "var(number)",
            "font_style": "italic"
        },
        {
            "name": "Built-in constant",
            "scope": "constant.language",
            "foreground": "var(const)"
        },
        {
            "name": "User-defined constant",
            "scope": "constant.character, constant.other",
            "foreground": "var(const)"
        },
        {
            "name": "Variable",
            "scope": "variable"
        },
        {
            "name": "Keyword",
            "scope": "keyword - (source.c keyword.operator | source.c++ keyword.operator | source.objc keyword.operator | source.objc++ keyword.operator), source.ruby keyword.declaration",
            "foreground": "var(keyword)"
        },
        {
            "name": "Annotation Punctuation",
            "scope": "punctuation.definition.annotation",
            "foreground": "var(foreground)"
        },
        {
            "name": "JavaScript Dollar",
            "scope": "variable.other.dollar.only.js",
            "foreground": "var(red)"
        },
        {
            "name": "Storage",
            "scope": "storage",
            "foreground": "var(red)"
        },
        {
            "name": "Storage type",
            "scope": "storage.type",
            "foreground": "var(keyword)",
        },
        {
            "name": "Entity name",
            "scope": "entity.name - (entity.name.filename | entity.name.section | entity.name.tag | entity.name.label)",
            "foreground": "var(function_decl)"
        },
        {
            "name": "Inherited class",
        "scope": "entity.other.inherited-class",
            "foreground": "var(foreground)",
            "font_style": "italic"
        },
        {
            "name": "Function argument",
            "scope": "variable.parameter - (source.c | source.c++ | source.objc | source.objc++)",
            "foreground": "var(parameter)",
        },
        {
            "name": "Language variable",
            "scope": "variable.language",
            "foreground": "var(foreground)",
        },
        {
            "name": "Tag name",
            "scope": "entity.name.tag | meta.mapping.key string.unquoted",
            "foreground": "var(tag_meta)"
        },
        {
            "name": "Tag attribute",
            "scope": "entity.other.attribute-name",
            "foreground": "var(tag_value)"
        },
        {
            "name": "Function call",
            "scope": "variable.function, variable.annotation",
            "foreground": "var(function_call)"
        },
        {
            "name": "Library function",
            "scope": "support.function, support.macro",
            "foreground": "var(function_call)"
        },
        {
            "name": "Library constant",
            "scope": "support.constant",
            "foreground": "var(const)"
        },
        {
            "name": "Library class/type",
            "scope": "support.type, support.class",
            "foreground": "var(enum_name)",
        },
        {
            "name": "Library variable",
            "scope": "support.other.variable",
        },
        {
            "name": "Invalid",
            "scope": "invalid",
            "foreground": "var(white)",
            "background": "var(red)"
        },
        {
            "name": "Invalid deprecated",
            "scope": "invalid.deprecated",
            "foreground": "var(white2)",
            "background": "var(red)"
        },
        {
            "name": "JSON String",
            "scope": "meta.structure.dictionary.json string.quoted.double.json",
            "foreground": "var(string)"
        },
        {
            "name": "YAML String",
            "scope": "string.unquoted.yaml",
            "foreground": "var(string)"
        },
        {
            "name": "diff.header",
            "scope": "meta.diff, meta.diff.header",
            "foreground": "var(yellow)"
        },
        {
            "name": "markup headings",
            "scope": "markup.heading",
            "font_style": "bold"
        },
        {
            "name": "markup headings",
            "scope": "markup.heading punctuation.definition.heading",
            "foreground": "var(yellow)"
        },
        {
            "name": "markup h1",
            "scope": "markup.heading.1 punctuation.definition.heading",
            "foreground": "var(enum_name)"
        },
        {
            "name": "markup links",
            "scope": "markup.underline.link",
            "foreground": "var(number)"
        },
        {
            "name": "markup bold",
            "scope": "markup.bold",
            "font_style": "bold"
        },
        {
            "name": "markup italic",
            "scope": "markup.italic",
            "font_style": "italic"
        },
        {
            "name": "markup underline",
            "scope": "markup.underline",
            "font_style": "underline"
        },
        {
            "name": "markup bold/italic",
            "scope": "markup.italic markup.bold | markup.bold markup.italic",
            "font_style": "bold italic"
        },
        {
            "name": "markup bold/underline",
            "scope": "markup.underline markup.bold | markup.bold markup.underline",
            "font_style": "bold underline"
        },
        {
            "name": "markup italic/underline",
            "scope": "markup.underline markup.italic | markup.italic markup.underline",
            "font_style": "italic underline"
        },
        {
            "name": "markup bold/italic/underline",
            "scope": "markup.bold markup.italic markup.underline | markup.bold markup.underline markup.italic | markup.italic markup.bold markup.underline | markup.italic markup.underline markup.bold | markup.underline markup.bold markup.italic | markup.underline markup.italic markup.bold",
            "font_style": "bold italic underline"
        },
        {
            "name": "markup hr",
            "scope": "punctuation.definition.thematic-break",
            "foreground": "var(yellow)"
        },
        {
            "name": "markup blockquote",
            "scope": "markup.quote punctuation.definition.blockquote",
            "foreground": "var(yellow)"
        },
        {
            "name": "markup bullets",
            "scope": "markup.list.numbered.bullet",
            "foreground": "var(number)"
        },
        {
            "name": "markup bullets",
            "scope": "markup.list.unnumbered.bullet | (markup.list.numbered punctuation.definition)",
            "foreground": "color(var(white) alpha(0.67))"
        },
        {
            "name": "markup code",
            "scope": "markup.raw",
            "background": "color(var(white) alpha(0.094))"
        },
        {
            "name": "markup punctuation",
            "scope": "markup.raw punctuation.definition.raw",
            "foreground": "color(var(white) alpha(0.67))"
        },
        {
            "name": "markup punctuation",
            "scope": "text & (punctuation.definition.italic | punctuation.definition.bold | punctuation.definition.raw | punctuation.definition.link | punctuation.definition.metadata | punctuation.definition.image | punctuation.separator.table-cell | punctuation.section.table-header | punctuation.definition.constant)",
            "foreground": "color(var(white) alpha(0.67))"
        },
        {
            "name": "diff.deleted",
            "scope": "markup.deleted",
            "foreground": "var(red2)"
        },
        {
            "name": "diff.inserted",
            "scope": "markup.inserted",
            "foreground": "var(yellow2)"
        },
        {
            "name": "diff.changed",
            "scope": "markup.changed",
            "foreground": "var(yellow)"
        },
        {
            "scope": "constant.numeric.line-number.find-in-files - match",
            "foreground": "color(var(number) alpha(0.63))"
        },
        {
            "scope": "entity.name.filename",
            "foreground": "var(yellow)"
        },
        {
            "scope": "message.error",
            "foreground": "var(red)"
        },

        {
            "scope": "diff.deleted",
            "background": "hsla(338, 50%, 56%, 0.15)",
            "foreground_adjust": "l(+ 5%)"
        },
        {
            "scope": "diff.deleted.char",
            "background": "hsla(338, 65%, 56%, 0.30)",
            "foreground_adjust": "l(+ 10%)"
        },
        {
            "scope": "diff.inserted",
            "background": "hsla(80, 50%, 53%, 0.15)",
            "foreground_adjust": "l(+ 5%)"
        },
        {
            "scope": "diff.inserted.char",
            "background": "hsla(80, 65%, 53%, 0.30)",
            "foreground_adjust": "l(+ 10%)"
        },
    ]
}
